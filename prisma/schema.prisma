datasource db {
    provider = "postgresql"
    url      = env("POSTGRES_PRISMA_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    username       String?    @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    Message       Message[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

// Application models
model Message {
    id        String    @id @default(cuid())
    content   String
    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt
    ownerId   String?
    owner     User?     @relation(fields: [ownerId], references: [id])
}

model ChatMessage {
    id        Int      @id @default(autoincrement())
    message   String
    username  String
    email     String
    createdAt DateTime @default(now())
}
